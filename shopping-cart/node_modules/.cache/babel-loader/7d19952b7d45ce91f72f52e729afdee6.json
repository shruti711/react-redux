{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\shrut\\\\Redux Project\\\\shopping-cart\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:\\\\Users\\\\shrut\\\\Redux Project\\\\shopping-cart\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _templateObject3,\n    _templateObject4,\n    _jsxFileName = \"C:\\\\Users\\\\shrut\\\\Redux Project\\\\shopping-cart\\\\src\\\\containers\\\\App.js\";\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport BakeryItems from './Homepage.json';\nimport CandyFlaour from './Candy.json';\nimport CakeFlaour from './Cake.json';\nimport BreadFlaour from './Bread.json'; // style for card\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    padding: 20,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-between'\n  },\n  media: {\n    height: 100,\n    paddingTop: '56.25%',\n    cursor: 'pointer',\n    width: '100%'\n  }\n}));\nconst CardGroup = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  width: 30%\\n\"])));\nconst ItemWrapper = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    width: 100%;\\n    margin-top: 2rem;\\n    background-color: #e9dede;\\n\"])));\nconst CartButton = styled.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n    font-size: 2rem;\\n    cursor: pointer;\\n    background-color: pink;\\n    border: 1px solid;\\n    width: 30%;\\n    margin: 0 auto;\\n    color: steelblue;\\n\"])));\nconst CardWrapper = styled.div(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n   width: 1000px;\\n   @media only screen and (max-width: 768px) {\\n     width: 680px;\\n   }\\n   @media only screen and (max-width: 568px) {\\n    width: 100%;\\n   }\\n\"])));\n\nfunction Homepage({\n  setLoginUser\n}) {\n  const classes = useStyles();\n  const bakeryItems = BakeryItems;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        selectedItem = _useState2[0],\n        setSelectedItem = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cart = _useState4[0],\n        setCart = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cartTotal = _useState6[0],\n        setCartTotal = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        settotalItem = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        checkoutItem = _useState10[0],\n        setCheckoutItem = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        orderProceed = _useState12[0],\n        setorderProceed = _useState12[1];\n\n  const addToCart = el => {\n    setCart([...cart, el]);\n  }; //remove item from card\n\n\n  const removeFromCart = el => {\n    let hardCopy = [...cart];\n    hardCopy = hardCopy.filter(cartItem => cartItem.id !== el.id);\n    setCart(hardCopy);\n  };\n\n  useEffect(() => {\n    total();\n  }, [cart]);\n  useEffect(() => {\n    totalItems();\n  }, [cartTotal]); // all perticular item(cake, chocolate, bread) selected by the user \n\n  const total = () => {\n    let totalVal = 0;\n\n    for (let i = 0; i < cart.length; i++) {\n      totalVal += cart[i].price;\n    }\n\n    setCartTotal(totalVal);\n  }; // all the items selected by the user\n\n\n  const totalItems = () => {\n    let totalVal = 0;\n\n    for (let i = 0; i < cartTotal.length; i++) {\n      totalVal += cartTotal[i].price;\n    }\n\n    settotalItem(totalVal);\n  }; // cardmedia card content add to cart\n\n\n  const cardMedia = t => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardMedia, {\n      key: t.id,\n      image: t.image,\n      title: t.title,\n      className: classes.media,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, t.title && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => addToCart(t),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => removeFromCart(t),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, \"-\")), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body\",\n      color: \"textPrimary\",\n      component: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, t.price), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body\",\n      color: \"Primary\",\n      component: \"h3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }, t.name), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textPrimary\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, t.description)));\n  };\n\n  const Cake = () => {\n    const cake = CakeFlaour;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, cake.map(t => /*#__PURE__*/React.createElement(CardGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, cardMedia(t))));\n  };\n\n  const Bread = () => {\n    const breads = BreadFlaour;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, breads.map(t => /*#__PURE__*/React.createElement(CardGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, cardMedia(t))));\n  };\n\n  const Chocolate = () => {\n    const candies = CandyFlaour;\n    return /*#__PURE__*/React.createElement(Card, {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, candies.map(t => /*#__PURE__*/React.createElement(CardGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, cardMedia(t))));\n  }; // list of all items\n\n\n  const item = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, selectedItem.name === 'Bread' && /*#__PURE__*/React.createElement(Bread, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }), selectedItem.name === 'Chocolate' && /*#__PURE__*/React.createElement(Chocolate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }\n    }), selectedItem.name === 'Cake' && /*#__PURE__*/React.createElement(Cake, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }));\n  }; //after placed the order\n\n\n  const PlacedOrder = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h3\",\n      color: \"initial\",\n      component: \"h1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, \"Order is placed\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setCheckoutItem(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \"Cancel\"));\n  }; // when order placed delete selected items\n\n\n  const proccedToPay = () => {\n    var arr = [cartTotal];\n    var arr1 = arr;\n    arr = [];\n    cart.length = 0;\n    setCartTotal(arr);\n    setorderProceed(true);\n  }; // order procced\n\n\n  const Checkout = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"popup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, !orderProceed ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setCheckoutItem(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }, \" Continue \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: proccedToPay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }, \"Procced\")) : /*#__PURE__*/React.createElement(PlacedOrder, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 21\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(CardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body\",\n    color: \"Primary\",\n    component: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }\n  }, \"Welcome to Bakery\"), /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, bakeryItems.map(t => /*#__PURE__*/React.createElement(CardGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    key: t.id,\n    image: t.image,\n    title: t.title,\n    className: classes.media,\n    onClick: () => setSelectedItem(t),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body\",\n    color: \"Primary\",\n    component: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 29\n    }\n  }, t.name))))));\n}\n\n;\nexport default Homepage; // import React from 'react'\n// import ProductsContainer from './ProductsContainer'\n// import CartContainer from './CartContainer'\n// const App = () => (\n//   <div>\n//     <h2>Shopping Cart Example</h2>\n//     <hr/>\n//     <ProductsContainer />\n//     <hr/>\n//     <CartContainer />\n//   </div>\n// )\n// export default App","map":{"version":3,"sources":["C:/Users/shrut/Redux Project/shopping-cart/src/containers/App.js"],"names":["React","useState","useEffect","Card","CardMedia","CardContent","styled","makeStyles","Typography","BakeryItems","CandyFlaour","CakeFlaour","BreadFlaour","useStyles","root","padding","display","flexWrap","justifyContent","media","height","paddingTop","cursor","width","CardGroup","div","ItemWrapper","CartButton","CardWrapper","Homepage","setLoginUser","classes","bakeryItems","selectedItem","setSelectedItem","cart","setCart","cartTotal","setCartTotal","settotalItem","checkoutItem","setCheckoutItem","orderProceed","setorderProceed","addToCart","el","removeFromCart","hardCopy","filter","cartItem","id","total","totalItems","totalVal","i","length","price","cardMedia","t","image","title","name","description","Cake","cake","map","Bread","breads","Chocolate","candies","item","PlacedOrder","proccedToPay","arr","arr1","Checkout"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport BakeryItems from './Homepage.json';\nimport CandyFlaour from './Candy.json';\nimport CakeFlaour from './Cake.json';\nimport BreadFlaour from './Bread.json';\n\n// style for card\nconst useStyles = makeStyles(() => ({\n    root: {\n        padding: 20,\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n    },\n    media: {\n        height: 100,\n        paddingTop: '56.25%',\n        cursor: 'pointer',\n        width: '100%',\n    },\n}));\n\nconst CardGroup = styled.div`\n  width: 30%\n`;\n\nconst ItemWrapper = styled.div`\n    width: 100%;\n    margin-top: 2rem;\n    background-color: #e9dede;\n`;\n\nconst CartButton = styled.div`\n    font-size: 2rem;\n    cursor: pointer;\n    background-color: pink;\n    border: 1px solid;\n    width: 30%;\n    margin: 0 auto;\n    color: steelblue;\n`;\n\nconst CardWrapper = styled.div`\n   width: 1000px;\n   @media only screen and (max-width: 768px) {\n     width: 680px;\n   }\n   @media only screen and (max-width: 568px) {\n    width: 100%;\n   }\n`;\n\nfunction Homepage({ setLoginUser }) {\n    const classes = useStyles();\n\n    const bakeryItems = BakeryItems;\n    const [selectedItem, setSelectedItem] = useState([]);\n    const [cart, setCart] = useState([]);\n    const [cartTotal, setCartTotal] = useState([]);\n    const [, settotalItem] = useState(0);\n    const [checkoutItem, setCheckoutItem] = useState(false);\n    const [orderProceed, setorderProceed] = useState(false);\n\n    const addToCart = (el) => {\n        setCart([...cart, el]);\n    };\n\n    //remove item from card\n    const removeFromCart = (el) => {\n        let hardCopy = [...cart];\n        hardCopy = hardCopy.filter((cartItem) => cartItem.id !== el.id);\n        setCart(hardCopy);\n    };\n\n    useEffect(() => {\n        total();\n    }, [cart]);\n\n    useEffect(() => {\n        totalItems();\n    }, [cartTotal]);\n\n    // all perticular item(cake, chocolate, bread) selected by the user \n    const total = () => {\n        let totalVal = 0;\n        for (let i = 0; i < cart.length; i++) {\n            totalVal += cart[i].price;\n        }\n        setCartTotal(totalVal);\n    };\n\n    // all the items selected by the user\n    const totalItems = () => {\n        let totalVal = 0;\n        for (let i = 0; i < cartTotal.length; i++) {\n            totalVal += cartTotal[i].price;\n        }\n        settotalItem(totalVal);\n    };\n\n    // cardmedia card content add to cart\n    const cardMedia = (t) => {\n        return (\n            <>\n                <CardMedia\n                    key={t.id}\n                    image={t.image}\n                    title={t.title}\n                    className={classes.media}\n                />\n                <CardContent>\n                    {t.title && (\n                        <div>\n                            <button onClick={() => addToCart(t)}>\n                                +\n                            </button>\n                            <button onClick={() => removeFromCart(t)}>\n                                -\n                            </button>\n                        </div>\n                    )}\n                    <Typography variant=\"body\" color=\"textPrimary\" component=\"h3\">\n                        {t.price}\n                    </Typography>\n                    <Typography variant=\"body\" color=\"Primary\" component=\"h3\">\n                        {t.name}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textPrimary\" component=\"p\">\n                        {t.description}\n                    </Typography>\n                </CardContent>\n            </>\n        )\n    };\n\n    const Cake = () => {\n        const cake = CakeFlaour;\n\n        return (\n            <Card className={classes.root}>\n                {cake.map((t) => (\n                    <CardGroup>\n                        {cardMedia(t)}\n                    </CardGroup>\n                ))}\n            </Card>\n        );\n    };\n\n    const Bread = () => {\n        const breads = BreadFlaour;\n\n        return (\n            <Card className={classes.root}>\n                {breads.map((t) => (\n                    <CardGroup>\n                        {cardMedia(t)}\n                    </CardGroup>\n                ))}\n            </Card>\n        );\n    };\n\n\n    const Chocolate = () => {\n        const candies = CandyFlaour;\n\n        return (\n            <Card className={classes.root}>\n                {candies.map((t) => (\n                    <CardGroup>\n                        {cardMedia(t)}\n                    </CardGroup>\n                ))}\n            </Card>\n        );\n    };\n\n    // list of all items\n    const item = () => {\n        return (\n            <>\n                {selectedItem.name === 'Bread' && (\n                    <Bread />\n                )}\n                {selectedItem.name === 'Chocolate' && (\n                    <Chocolate />\n                )}\n                {selectedItem.name === 'Cake' && (\n                    <Cake />\n                )}\n            </>\n        )\n    };\n\n    //after placed the order\n    const PlacedOrder = () => {\n        return (\n            <div>\n                <Typography variant=\"h3\" color=\"initial\" component=\"h1\">\n                    Order is placed\n                </Typography>\n                <button onClick={() => setCheckoutItem(false)}>Cancel</button>\n            </div>\n        )\n    };\n\n    // when order placed delete selected items\n    const proccedToPay = () => {\n        var arr = [cartTotal];\n        var arr1 = arr;\n        arr = [];\n        cart.length = 0;\n        setCartTotal(arr);\n        setorderProceed(true);\n    };\n\n    // order procced\n    const Checkout = () => {\n        return (\n            <div className='popup'>\n                {!orderProceed ? (\n                    <>\n                        <button onClick={() => setCheckoutItem(false)}> Continue </button>\n                        <button onClick={proccedToPay}>Procced</button>\n                    </>\n                ) : (\n                    <PlacedOrder />\n                )}\n            </div>\n        )\n    };\n\n    return (\n        <CardWrapper>\n        <Typography variant=\"body\" color=\"Primary\" component=\"h1\">\n                    Welcome to Bakery\n                </Typography>\n            <Card className={classes.root}>\n                {bakeryItems.map((t) => (\n                    <CardGroup>\n                        <CardMedia\n                            key={t.id}\n                            image={t.image}\n                            title={t.title}\n                            className={classes.media}\n                            onClick={() => setSelectedItem(t)}\n                        />\n                        <CardContent>\n                            <Typography variant=\"body\" color=\"Primary\" component=\"h3\">\n                                {t.name}\n                            </Typography>\n                        </CardContent>\n                    </CardGroup>\n                ))}\n            </Card>\n        </CardWrapper>\n    );\n};\n\nexport default Homepage;\n\n\n\n\n\n\n\n\n\n\n\n\n// import React from 'react'\n// import ProductsContainer from './ProductsContainer'\n// import CartContainer from './CartContainer'\n\n// const App = () => (\n//   <div>\n//     <h2>Shopping Cart Example</h2>\n//     <hr/>\n//     <ProductsContainer />\n//     <hr/>\n//     <CartContainer />\n//   </div>\n// )\n\n// export default App\n"]},"metadata":{},"sourceType":"module"}